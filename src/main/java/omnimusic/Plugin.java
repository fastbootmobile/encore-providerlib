// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Plugin.proto

package omnimusic;

public final class Plugin {
  private Plugin() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AudioDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:omnimusic.AudioData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes samples = 1;</code>
     */
    boolean hasSamples();
    /**
     * <code>required bytes samples = 1;</code>
     */
    com.google.protobuf.ByteString getSamples();
  }
  /**
   * Protobuf type {@code omnimusic.AudioData}
   *
   * <pre>
   * OPCODE_AUDIODATA = 1
   * </pre>
   */
  public static final class AudioData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:omnimusic.AudioData)
      AudioDataOrBuilder {
    // Use AudioData.newBuilder() to construct.
    private AudioData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AudioData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AudioData defaultInstance;
    public static AudioData getDefaultInstance() {
      return defaultInstance;
    }

    public AudioData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AudioData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              samples_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return omnimusic.Plugin.internal_static_omnimusic_AudioData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return omnimusic.Plugin.internal_static_omnimusic_AudioData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              omnimusic.Plugin.AudioData.class, omnimusic.Plugin.AudioData.Builder.class);
    }

    public static com.google.protobuf.Parser<AudioData> PARSER =
        new com.google.protobuf.AbstractParser<AudioData>() {
      public AudioData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AudioData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SAMPLES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString samples_;
    /**
     * <code>required bytes samples = 1;</code>
     */
    public boolean hasSamples() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes samples = 1;</code>
     */
    public com.google.protobuf.ByteString getSamples() {
      return samples_;
    }

    private void initFields() {
      samples_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSamples()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, samples_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, samples_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static omnimusic.Plugin.AudioData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.AudioData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.AudioData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.AudioData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.AudioData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.AudioData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.AudioData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static omnimusic.Plugin.AudioData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.AudioData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.AudioData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(omnimusic.Plugin.AudioData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code omnimusic.AudioData}
     *
     * <pre>
     * OPCODE_AUDIODATA = 1
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:omnimusic.AudioData)
        omnimusic.Plugin.AudioDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return omnimusic.Plugin.internal_static_omnimusic_AudioData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return omnimusic.Plugin.internal_static_omnimusic_AudioData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                omnimusic.Plugin.AudioData.class, omnimusic.Plugin.AudioData.Builder.class);
      }

      // Construct using omnimusic.Plugin.AudioData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        samples_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return omnimusic.Plugin.internal_static_omnimusic_AudioData_descriptor;
      }

      public omnimusic.Plugin.AudioData getDefaultInstanceForType() {
        return omnimusic.Plugin.AudioData.getDefaultInstance();
      }

      public omnimusic.Plugin.AudioData build() {
        omnimusic.Plugin.AudioData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public omnimusic.Plugin.AudioData buildPartial() {
        omnimusic.Plugin.AudioData result = new omnimusic.Plugin.AudioData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.samples_ = samples_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof omnimusic.Plugin.AudioData) {
          return mergeFrom((omnimusic.Plugin.AudioData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(omnimusic.Plugin.AudioData other) {
        if (other == omnimusic.Plugin.AudioData.getDefaultInstance()) return this;
        if (other.hasSamples()) {
          setSamples(other.getSamples());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSamples()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        omnimusic.Plugin.AudioData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (omnimusic.Plugin.AudioData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString samples_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes samples = 1;</code>
       */
      public boolean hasSamples() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes samples = 1;</code>
       */
      public com.google.protobuf.ByteString getSamples() {
        return samples_;
      }
      /**
       * <code>required bytes samples = 1;</code>
       */
      public Builder setSamples(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        samples_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes samples = 1;</code>
       */
      public Builder clearSamples() {
        bitField0_ = (bitField0_ & ~0x00000001);
        samples_ = getDefaultInstance().getSamples();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:omnimusic.AudioData)
    }

    static {
      defaultInstance = new AudioData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:omnimusic.AudioData)
  }

  public interface AudioResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:omnimusic.AudioResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 written = 1;</code>
     *
     * <pre>
     * Number of samples (ie. mono, single frames) written
     * </pre>
     */
    boolean hasWritten();
    /**
     * <code>required int32 written = 1;</code>
     *
     * <pre>
     * Number of samples (ie. mono, single frames) written
     * </pre>
     */
    int getWritten();
  }
  /**
   * Protobuf type {@code omnimusic.AudioResponse}
   *
   * <pre>
   * OPCODE_AUDIORESPONSE = 2
   * </pre>
   */
  public static final class AudioResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:omnimusic.AudioResponse)
      AudioResponseOrBuilder {
    // Use AudioResponse.newBuilder() to construct.
    private AudioResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AudioResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AudioResponse defaultInstance;
    public static AudioResponse getDefaultInstance() {
      return defaultInstance;
    }

    public AudioResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AudioResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              written_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return omnimusic.Plugin.internal_static_omnimusic_AudioResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return omnimusic.Plugin.internal_static_omnimusic_AudioResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              omnimusic.Plugin.AudioResponse.class, omnimusic.Plugin.AudioResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<AudioResponse> PARSER =
        new com.google.protobuf.AbstractParser<AudioResponse>() {
      public AudioResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AudioResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AudioResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int WRITTEN_FIELD_NUMBER = 1;
    private int written_;
    /**
     * <code>required int32 written = 1;</code>
     *
     * <pre>
     * Number of samples (ie. mono, single frames) written
     * </pre>
     */
    public boolean hasWritten() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 written = 1;</code>
     *
     * <pre>
     * Number of samples (ie. mono, single frames) written
     * </pre>
     */
    public int getWritten() {
      return written_;
    }

    private void initFields() {
      written_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasWritten()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, written_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, written_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static omnimusic.Plugin.AudioResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.AudioResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.AudioResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.AudioResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.AudioResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.AudioResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.AudioResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static omnimusic.Plugin.AudioResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.AudioResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.AudioResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(omnimusic.Plugin.AudioResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code omnimusic.AudioResponse}
     *
     * <pre>
     * OPCODE_AUDIORESPONSE = 2
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:omnimusic.AudioResponse)
        omnimusic.Plugin.AudioResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return omnimusic.Plugin.internal_static_omnimusic_AudioResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return omnimusic.Plugin.internal_static_omnimusic_AudioResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                omnimusic.Plugin.AudioResponse.class, omnimusic.Plugin.AudioResponse.Builder.class);
      }

      // Construct using omnimusic.Plugin.AudioResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        written_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return omnimusic.Plugin.internal_static_omnimusic_AudioResponse_descriptor;
      }

      public omnimusic.Plugin.AudioResponse getDefaultInstanceForType() {
        return omnimusic.Plugin.AudioResponse.getDefaultInstance();
      }

      public omnimusic.Plugin.AudioResponse build() {
        omnimusic.Plugin.AudioResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public omnimusic.Plugin.AudioResponse buildPartial() {
        omnimusic.Plugin.AudioResponse result = new omnimusic.Plugin.AudioResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.written_ = written_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof omnimusic.Plugin.AudioResponse) {
          return mergeFrom((omnimusic.Plugin.AudioResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(omnimusic.Plugin.AudioResponse other) {
        if (other == omnimusic.Plugin.AudioResponse.getDefaultInstance()) return this;
        if (other.hasWritten()) {
          setWritten(other.getWritten());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWritten()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        omnimusic.Plugin.AudioResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (omnimusic.Plugin.AudioResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int written_ ;
      /**
       * <code>required int32 written = 1;</code>
       *
       * <pre>
       * Number of samples (ie. mono, single frames) written
       * </pre>
       */
      public boolean hasWritten() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 written = 1;</code>
       *
       * <pre>
       * Number of samples (ie. mono, single frames) written
       * </pre>
       */
      public int getWritten() {
        return written_;
      }
      /**
       * <code>required int32 written = 1;</code>
       *
       * <pre>
       * Number of samples (ie. mono, single frames) written
       * </pre>
       */
      public Builder setWritten(int value) {
        bitField0_ |= 0x00000001;
        written_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 written = 1;</code>
       *
       * <pre>
       * Number of samples (ie. mono, single frames) written
       * </pre>
       */
      public Builder clearWritten() {
        bitField0_ = (bitField0_ & ~0x00000001);
        written_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:omnimusic.AudioResponse)
    }

    static {
      defaultInstance = new AudioResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:omnimusic.AudioResponse)
  }

  public interface RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:omnimusic.Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .omnimusic.Request.RequestType request = 1;</code>
     */
    boolean hasRequest();
    /**
     * <code>required .omnimusic.Request.RequestType request = 1;</code>
     */
    omnimusic.Plugin.Request.RequestType getRequest();
  }
  /**
   * Protobuf type {@code omnimusic.Request}
   *
   * <pre>
   * OPCODE_REQUEST = 3
   * </pre>
   */
  public static final class Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:omnimusic.Request)
      RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Request(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }

    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Request(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              omnimusic.Plugin.Request.RequestType value = omnimusic.Plugin.Request.RequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                request_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return omnimusic.Plugin.internal_static_omnimusic_Request_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return omnimusic.Plugin.internal_static_omnimusic_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              omnimusic.Plugin.Request.class, omnimusic.Plugin.Request.Builder.class);
    }

    public static com.google.protobuf.Parser<Request> PARSER =
        new com.google.protobuf.AbstractParser<Request>() {
      public Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Request(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Request> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code omnimusic.Request.RequestType}
     */
    public enum RequestType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FORMAT_INFO = 0;</code>
       */
      FORMAT_INFO(0, 0),
      /**
       * <code>BUFFER_INFO = 1;</code>
       */
      BUFFER_INFO(1, 1),
      ;

      /**
       * <code>FORMAT_INFO = 0;</code>
       */
      public static final int FORMAT_INFO_VALUE = 0;
      /**
       * <code>BUFFER_INFO = 1;</code>
       */
      public static final int BUFFER_INFO_VALUE = 1;


      public final int getNumber() { return value; }

      public static RequestType valueOf(int value) {
        switch (value) {
          case 0: return FORMAT_INFO;
          case 1: return BUFFER_INFO;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RequestType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
              public RequestType findValueByNumber(int number) {
                return RequestType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return omnimusic.Plugin.Request.getDescriptor().getEnumTypes().get(0);
      }

      private static final RequestType[] VALUES = values();

      public static RequestType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private RequestType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:omnimusic.Request.RequestType)
    }

    private int bitField0_;
    public static final int REQUEST_FIELD_NUMBER = 1;
    private omnimusic.Plugin.Request.RequestType request_;
    /**
     * <code>required .omnimusic.Request.RequestType request = 1;</code>
     */
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .omnimusic.Request.RequestType request = 1;</code>
     */
    public omnimusic.Plugin.Request.RequestType getRequest() {
      return request_;
    }

    private void initFields() {
      request_ = omnimusic.Plugin.Request.RequestType.FORMAT_INFO;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRequest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, request_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, request_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static omnimusic.Plugin.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static omnimusic.Plugin.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(omnimusic.Plugin.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code omnimusic.Request}
     *
     * <pre>
     * OPCODE_REQUEST = 3
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:omnimusic.Request)
        omnimusic.Plugin.RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return omnimusic.Plugin.internal_static_omnimusic_Request_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return omnimusic.Plugin.internal_static_omnimusic_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                omnimusic.Plugin.Request.class, omnimusic.Plugin.Request.Builder.class);
      }

      // Construct using omnimusic.Plugin.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        request_ = omnimusic.Plugin.Request.RequestType.FORMAT_INFO;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return omnimusic.Plugin.internal_static_omnimusic_Request_descriptor;
      }

      public omnimusic.Plugin.Request getDefaultInstanceForType() {
        return omnimusic.Plugin.Request.getDefaultInstance();
      }

      public omnimusic.Plugin.Request build() {
        omnimusic.Plugin.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public omnimusic.Plugin.Request buildPartial() {
        omnimusic.Plugin.Request result = new omnimusic.Plugin.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.request_ = request_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof omnimusic.Plugin.Request) {
          return mergeFrom((omnimusic.Plugin.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(omnimusic.Plugin.Request other) {
        if (other == omnimusic.Plugin.Request.getDefaultInstance()) return this;
        if (other.hasRequest()) {
          setRequest(other.getRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequest()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        omnimusic.Plugin.Request parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (omnimusic.Plugin.Request) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private omnimusic.Plugin.Request.RequestType request_ = omnimusic.Plugin.Request.RequestType.FORMAT_INFO;
      /**
       * <code>required .omnimusic.Request.RequestType request = 1;</code>
       */
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .omnimusic.Request.RequestType request = 1;</code>
       */
      public omnimusic.Plugin.Request.RequestType getRequest() {
        return request_;
      }
      /**
       * <code>required .omnimusic.Request.RequestType request = 1;</code>
       */
      public Builder setRequest(omnimusic.Plugin.Request.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        request_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .omnimusic.Request.RequestType request = 1;</code>
       */
      public Builder clearRequest() {
        bitField0_ = (bitField0_ & ~0x00000001);
        request_ = omnimusic.Plugin.Request.RequestType.FORMAT_INFO;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:omnimusic.Request)
    }

    static {
      defaultInstance = new Request(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:omnimusic.Request)
  }

  public interface FormatInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:omnimusic.FormatInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 sampling_rate = 1;</code>
     *
     * <pre>
     * The sampling rate, in Hz (example: 44100)
     * </pre>
     */
    boolean hasSamplingRate();
    /**
     * <code>required int32 sampling_rate = 1;</code>
     *
     * <pre>
     * The sampling rate, in Hz (example: 44100)
     * </pre>
     */
    int getSamplingRate();

    /**
     * <code>required int32 channels = 2;</code>
     *
     * <pre>
     * The number of channels (such as 1 for mono, or 2 for stereo)
     * </pre>
     */
    boolean hasChannels();
    /**
     * <code>required int32 channels = 2;</code>
     *
     * <pre>
     * The number of channels (such as 1 for mono, or 2 for stereo)
     * </pre>
     */
    int getChannels();
  }
  /**
   * Protobuf type {@code omnimusic.FormatInfo}
   *
   * <pre>
   * OPCODE_FORMATINFO = 4
   * </pre>
   */
  public static final class FormatInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:omnimusic.FormatInfo)
      FormatInfoOrBuilder {
    // Use FormatInfo.newBuilder() to construct.
    private FormatInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FormatInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FormatInfo defaultInstance;
    public static FormatInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FormatInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FormatInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              samplingRate_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channels_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return omnimusic.Plugin.internal_static_omnimusic_FormatInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return omnimusic.Plugin.internal_static_omnimusic_FormatInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              omnimusic.Plugin.FormatInfo.class, omnimusic.Plugin.FormatInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FormatInfo> PARSER =
        new com.google.protobuf.AbstractParser<FormatInfo>() {
      public FormatInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FormatInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FormatInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SAMPLING_RATE_FIELD_NUMBER = 1;
    private int samplingRate_;
    /**
     * <code>required int32 sampling_rate = 1;</code>
     *
     * <pre>
     * The sampling rate, in Hz (example: 44100)
     * </pre>
     */
    public boolean hasSamplingRate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 sampling_rate = 1;</code>
     *
     * <pre>
     * The sampling rate, in Hz (example: 44100)
     * </pre>
     */
    public int getSamplingRate() {
      return samplingRate_;
    }

    public static final int CHANNELS_FIELD_NUMBER = 2;
    private int channels_;
    /**
     * <code>required int32 channels = 2;</code>
     *
     * <pre>
     * The number of channels (such as 1 for mono, or 2 for stereo)
     * </pre>
     */
    public boolean hasChannels() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 channels = 2;</code>
     *
     * <pre>
     * The number of channels (such as 1 for mono, or 2 for stereo)
     * </pre>
     */
    public int getChannels() {
      return channels_;
    }

    private void initFields() {
      samplingRate_ = 0;
      channels_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSamplingRate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChannels()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, samplingRate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channels_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, samplingRate_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channels_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static omnimusic.Plugin.FormatInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.FormatInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.FormatInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.FormatInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.FormatInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.FormatInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.FormatInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static omnimusic.Plugin.FormatInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.FormatInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.FormatInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(omnimusic.Plugin.FormatInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code omnimusic.FormatInfo}
     *
     * <pre>
     * OPCODE_FORMATINFO = 4
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:omnimusic.FormatInfo)
        omnimusic.Plugin.FormatInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return omnimusic.Plugin.internal_static_omnimusic_FormatInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return omnimusic.Plugin.internal_static_omnimusic_FormatInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                omnimusic.Plugin.FormatInfo.class, omnimusic.Plugin.FormatInfo.Builder.class);
      }

      // Construct using omnimusic.Plugin.FormatInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        samplingRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        channels_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return omnimusic.Plugin.internal_static_omnimusic_FormatInfo_descriptor;
      }

      public omnimusic.Plugin.FormatInfo getDefaultInstanceForType() {
        return omnimusic.Plugin.FormatInfo.getDefaultInstance();
      }

      public omnimusic.Plugin.FormatInfo build() {
        omnimusic.Plugin.FormatInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public omnimusic.Plugin.FormatInfo buildPartial() {
        omnimusic.Plugin.FormatInfo result = new omnimusic.Plugin.FormatInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.samplingRate_ = samplingRate_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channels_ = channels_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof omnimusic.Plugin.FormatInfo) {
          return mergeFrom((omnimusic.Plugin.FormatInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(omnimusic.Plugin.FormatInfo other) {
        if (other == omnimusic.Plugin.FormatInfo.getDefaultInstance()) return this;
        if (other.hasSamplingRate()) {
          setSamplingRate(other.getSamplingRate());
        }
        if (other.hasChannels()) {
          setChannels(other.getChannels());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSamplingRate()) {
          
          return false;
        }
        if (!hasChannels()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        omnimusic.Plugin.FormatInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (omnimusic.Plugin.FormatInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int samplingRate_ ;
      /**
       * <code>required int32 sampling_rate = 1;</code>
       *
       * <pre>
       * The sampling rate, in Hz (example: 44100)
       * </pre>
       */
      public boolean hasSamplingRate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 sampling_rate = 1;</code>
       *
       * <pre>
       * The sampling rate, in Hz (example: 44100)
       * </pre>
       */
      public int getSamplingRate() {
        return samplingRate_;
      }
      /**
       * <code>required int32 sampling_rate = 1;</code>
       *
       * <pre>
       * The sampling rate, in Hz (example: 44100)
       * </pre>
       */
      public Builder setSamplingRate(int value) {
        bitField0_ |= 0x00000001;
        samplingRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sampling_rate = 1;</code>
       *
       * <pre>
       * The sampling rate, in Hz (example: 44100)
       * </pre>
       */
      public Builder clearSamplingRate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        samplingRate_ = 0;
        onChanged();
        return this;
      }

      private int channels_ ;
      /**
       * <code>required int32 channels = 2;</code>
       *
       * <pre>
       * The number of channels (such as 1 for mono, or 2 for stereo)
       * </pre>
       */
      public boolean hasChannels() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 channels = 2;</code>
       *
       * <pre>
       * The number of channels (such as 1 for mono, or 2 for stereo)
       * </pre>
       */
      public int getChannels() {
        return channels_;
      }
      /**
       * <code>required int32 channels = 2;</code>
       *
       * <pre>
       * The number of channels (such as 1 for mono, or 2 for stereo)
       * </pre>
       */
      public Builder setChannels(int value) {
        bitField0_ |= 0x00000002;
        channels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 channels = 2;</code>
       *
       * <pre>
       * The number of channels (such as 1 for mono, or 2 for stereo)
       * </pre>
       */
      public Builder clearChannels() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channels_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:omnimusic.FormatInfo)
    }

    static {
      defaultInstance = new FormatInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:omnimusic.FormatInfo)
  }

  public interface BufferInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:omnimusic.BufferInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 samples = 1;</code>
     *
     * <pre>
     * Current number of samples in the buffer
     * </pre>
     */
    boolean hasSamples();
    /**
     * <code>required int32 samples = 1;</code>
     *
     * <pre>
     * Current number of samples in the buffer
     * </pre>
     */
    int getSamples();

    /**
     * <code>required int32 stutter = 2;</code>
     *
     * <pre>
     * Stutter or dropout events that occured
     * </pre>
     */
    boolean hasStutter();
    /**
     * <code>required int32 stutter = 2;</code>
     *
     * <pre>
     * Stutter or dropout events that occured
     * </pre>
     */
    int getStutter();
  }
  /**
   * Protobuf type {@code omnimusic.BufferInfo}
   *
   * <pre>
   * OPCODE_BUFFERINFO = 5
   * </pre>
   */
  public static final class BufferInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:omnimusic.BufferInfo)
      BufferInfoOrBuilder {
    // Use BufferInfo.newBuilder() to construct.
    private BufferInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BufferInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BufferInfo defaultInstance;
    public static BufferInfo getDefaultInstance() {
      return defaultInstance;
    }

    public BufferInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BufferInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              samples_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stutter_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return omnimusic.Plugin.internal_static_omnimusic_BufferInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return omnimusic.Plugin.internal_static_omnimusic_BufferInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              omnimusic.Plugin.BufferInfo.class, omnimusic.Plugin.BufferInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<BufferInfo> PARSER =
        new com.google.protobuf.AbstractParser<BufferInfo>() {
      public BufferInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BufferInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BufferInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SAMPLES_FIELD_NUMBER = 1;
    private int samples_;
    /**
     * <code>required int32 samples = 1;</code>
     *
     * <pre>
     * Current number of samples in the buffer
     * </pre>
     */
    public boolean hasSamples() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 samples = 1;</code>
     *
     * <pre>
     * Current number of samples in the buffer
     * </pre>
     */
    public int getSamples() {
      return samples_;
    }

    public static final int STUTTER_FIELD_NUMBER = 2;
    private int stutter_;
    /**
     * <code>required int32 stutter = 2;</code>
     *
     * <pre>
     * Stutter or dropout events that occured
     * </pre>
     */
    public boolean hasStutter() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 stutter = 2;</code>
     *
     * <pre>
     * Stutter or dropout events that occured
     * </pre>
     */
    public int getStutter() {
      return stutter_;
    }

    private void initFields() {
      samples_ = 0;
      stutter_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSamples()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStutter()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, samples_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, stutter_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, samples_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, stutter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static omnimusic.Plugin.BufferInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.BufferInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.BufferInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static omnimusic.Plugin.BufferInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static omnimusic.Plugin.BufferInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.BufferInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.BufferInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static omnimusic.Plugin.BufferInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static omnimusic.Plugin.BufferInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static omnimusic.Plugin.BufferInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(omnimusic.Plugin.BufferInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code omnimusic.BufferInfo}
     *
     * <pre>
     * OPCODE_BUFFERINFO = 5
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:omnimusic.BufferInfo)
        omnimusic.Plugin.BufferInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return omnimusic.Plugin.internal_static_omnimusic_BufferInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return omnimusic.Plugin.internal_static_omnimusic_BufferInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                omnimusic.Plugin.BufferInfo.class, omnimusic.Plugin.BufferInfo.Builder.class);
      }

      // Construct using omnimusic.Plugin.BufferInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        samples_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        stutter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return omnimusic.Plugin.internal_static_omnimusic_BufferInfo_descriptor;
      }

      public omnimusic.Plugin.BufferInfo getDefaultInstanceForType() {
        return omnimusic.Plugin.BufferInfo.getDefaultInstance();
      }

      public omnimusic.Plugin.BufferInfo build() {
        omnimusic.Plugin.BufferInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public omnimusic.Plugin.BufferInfo buildPartial() {
        omnimusic.Plugin.BufferInfo result = new omnimusic.Plugin.BufferInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.samples_ = samples_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stutter_ = stutter_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof omnimusic.Plugin.BufferInfo) {
          return mergeFrom((omnimusic.Plugin.BufferInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(omnimusic.Plugin.BufferInfo other) {
        if (other == omnimusic.Plugin.BufferInfo.getDefaultInstance()) return this;
        if (other.hasSamples()) {
          setSamples(other.getSamples());
        }
        if (other.hasStutter()) {
          setStutter(other.getStutter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSamples()) {
          
          return false;
        }
        if (!hasStutter()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        omnimusic.Plugin.BufferInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (omnimusic.Plugin.BufferInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int samples_ ;
      /**
       * <code>required int32 samples = 1;</code>
       *
       * <pre>
       * Current number of samples in the buffer
       * </pre>
       */
      public boolean hasSamples() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 samples = 1;</code>
       *
       * <pre>
       * Current number of samples in the buffer
       * </pre>
       */
      public int getSamples() {
        return samples_;
      }
      /**
       * <code>required int32 samples = 1;</code>
       *
       * <pre>
       * Current number of samples in the buffer
       * </pre>
       */
      public Builder setSamples(int value) {
        bitField0_ |= 0x00000001;
        samples_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 samples = 1;</code>
       *
       * <pre>
       * Current number of samples in the buffer
       * </pre>
       */
      public Builder clearSamples() {
        bitField0_ = (bitField0_ & ~0x00000001);
        samples_ = 0;
        onChanged();
        return this;
      }

      private int stutter_ ;
      /**
       * <code>required int32 stutter = 2;</code>
       *
       * <pre>
       * Stutter or dropout events that occured
       * </pre>
       */
      public boolean hasStutter() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 stutter = 2;</code>
       *
       * <pre>
       * Stutter or dropout events that occured
       * </pre>
       */
      public int getStutter() {
        return stutter_;
      }
      /**
       * <code>required int32 stutter = 2;</code>
       *
       * <pre>
       * Stutter or dropout events that occured
       * </pre>
       */
      public Builder setStutter(int value) {
        bitField0_ |= 0x00000002;
        stutter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 stutter = 2;</code>
       *
       * <pre>
       * Stutter or dropout events that occured
       * </pre>
       */
      public Builder clearStutter() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stutter_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:omnimusic.BufferInfo)
    }

    static {
      defaultInstance = new BufferInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:omnimusic.BufferInfo)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_omnimusic_AudioData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_omnimusic_AudioData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_omnimusic_AudioResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_omnimusic_AudioResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_omnimusic_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_omnimusic_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_omnimusic_FormatInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_omnimusic_FormatInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_omnimusic_BufferInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_omnimusic_BufferInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Plugin.proto\022\tomnimusic\"\034\n\tAudioData\022\017" +
      "\n\007samples\030\001 \002(\014\" \n\rAudioResponse\022\017\n\007writ" +
      "ten\030\001 \002(\005\"k\n\007Request\022/\n\007request\030\001 \002(\0162\036." +
      "omnimusic.Request.RequestType\"/\n\013Request" +
      "Type\022\017\n\013FORMAT_INFO\020\000\022\017\n\013BUFFER_INFO\020\001\"5" +
      "\n\nFormatInfo\022\025\n\rsampling_rate\030\001 \002(\005\022\020\n\010c" +
      "hannels\030\002 \002(\005\".\n\nBufferInfo\022\017\n\007samples\030\001" +
      " \002(\005\022\017\n\007stutter\030\002 \002(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_omnimusic_AudioData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_omnimusic_AudioData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_omnimusic_AudioData_descriptor,
        new java.lang.String[] { "Samples", });
    internal_static_omnimusic_AudioResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_omnimusic_AudioResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_omnimusic_AudioResponse_descriptor,
        new java.lang.String[] { "Written", });
    internal_static_omnimusic_Request_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_omnimusic_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_omnimusic_Request_descriptor,
        new java.lang.String[] { "Request", });
    internal_static_omnimusic_FormatInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_omnimusic_FormatInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_omnimusic_FormatInfo_descriptor,
        new java.lang.String[] { "SamplingRate", "Channels", });
    internal_static_omnimusic_BufferInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_omnimusic_BufferInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_omnimusic_BufferInfo_descriptor,
        new java.lang.String[] { "Samples", "Stutter", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
